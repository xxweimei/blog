<krpano>
	<include url="showtext.xml" />
	<include url="thumbs.xml" />

    <skin_settings
            gyro="true"
            webvr="true"
            littleplanetintro="true"
            loadscene_flags="MERGE"
            loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
            loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
            loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
            layout_width="100%"
            layout_maxwidth="100%"
            design_skin_images="../img/skin.png"
            design_bgcolor="0x2D3E50"
            design_bgalpha="0.8"
            design_text_css="color:#FFFFFF; font-family:Arial;"
            design_text_shadow="1"
			controlbar_width="-24"
			controlbar_height="40"
			controlbar_offset="20"
			controlbar_offset_closed="-40"
			controlbar_overlap.no-fractionalscaling="10"
			controlbar_overlap.fractionalscaling="0"
    />

    <vtourskinxmlpath url="./"/>

    <control mouse="drag"
             touch="drag"
             zoomtocursor="false"
             zoomoutcursor="false"
             draginertia="0.1"
             dragfriction="0.9"
             movetoaccelerate="1.0"
             movetospeed="10.0"
             movetofriction="0.8"
             keybaccelerate="0.09"
             keybfriction="0.94"
             keybfovchange="0.25"
             mousefovchange="1.0"
             fovspeed="3.0"
             fovfriction="0.9"
             bouncinglimits="true"
			 keycodesin="16,65,107"
			 keycodesout="17,89,90,109"
    />

    <cursors standard="default" dragging="move" moving="move"/>

    <krpano stagescale="calc:stagescale * 2" if="stagescale LT 1.0" devices="mobile"/>

    <include url="webvr.xml" devices="html5"/>

    <plugin name="WebVR" keep="true" devices="html5"
            pluginurl="../script/webvr.js"
            url=""
            multireslock.desktop="true"
            multireslock.mobile.or.tablet="false"
            mobilevr_support="true"
            mobilevr_fake_support="true"
            onavailable="removelayer(webvr_enterbutton); webvr_onavailable();"
            onentervr="webvr_onentervr(); webvr_setup(); skin_reloadscene_webvr();"
            onexitvr="webvr_onexitvr(); webvr_setup(); skin_reloadscene_webvr();"
    />

    <style name="webvr_button_style"
           border="false"
           roundedge="calc:1.0"
           backgroundcolor="get:skin_settings.design_bgcolor" backgroundalpha="get:skin_settings.design_bgalpha"
           shadow="0.01" shadowrange="10.0" shadowangle="90.0" shadowcolor="0x30261B" shadowalpha="0.50"
           css="calc:skin_settings.design_text_css + ' color:#FFFFFF;font-size:' + 20*webvr_setup_scale*webvr_button_scale + 'px;'"
    />

    <layer name="webvr_rotate_to_landscape_request" keep="true" vr="true" devices="mobile"
           url="rotate_device.png" scale="0.5"
           align="top" edge="center" y="28%"
           autoalpha="true" alpha="0.0"
           enabled="false"
    />

    <events name="webvr_events" keep="true" devices="html5"
            onresize.mobile="webvr_act_as_gyro_in_portrait_mode();"
            onviewchange=""
    />

    <action name="webvr_setup">
        if(webvr.isenabled,
        copy(loadscene_flags_backup, skin_settings.loadscene_flags);
        set(skin_settings.loadscene_flags, MERGE|KEEPVIEW|KEEPMOVING|NOPREVIEW);
        webvr_act_as_gyro_in_portrait_mode(true);
        if(scene.count GT 1;
        );,
        if(loadscene_flags_backup !== null, copy(skin_settings.loadscene_flags, loadscene_flags_backup));
        tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
        set(events[webvr_events].onviewchange, null);
        );
    </action>

    <action name="webvr_act_as_gyro_in_portrait_mode">
        if(device.mobile AND webvr.isenabled,
        div(aspect, stagewidth, stageheight);
        if(aspect != lastaspect OR '%1' == 'true',
        copy(lastaspect, aspect);
        if(stagewidth GT stageheight,
        <!-- landscape orientation - use stereo rendering and a direct/fast gyro sensor mode -->
        set(display.stereo, true);
        set(webvr.mobilevr_sensor_mode, 3);
        webvr.update();
        tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
        ,
        <!-- portrait orientation - use normal rendering and a smoother/slower gyro sensor mode -->
        set(display.stereo, false);
        set(webvr.mobilevr_sensor_mode, 1);
        webvr.update();
        tween(layer[webvr_rotate_to_landscape_request].alpha, 1.0);
        delayedcall(3.0, tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 1.0); );
        );
        );
        ,
        set(lastaspect, 0);
        );
    </action>

	<plugin name="loading" url="../img/loading.png" scale="0.5" keep="true" align="center" enabled="false" visible="false"/>
	<events onxmlcomplete="set(plugin[loading].visible,true);" onloadcomplete="set(plugin[loading].visible,false);"/>

	<style name="skin_style" url="calc:vtourskinxmlpath.url + skin_settings.design_skin_images"/>

	<!-- 热点样式 -->
	<action name="add_all_the_time_tooltip">
		txtadd(tooltipname, 'tooltip_', get(name));
		addplugin(get(tooltipname));
		txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
		set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		set(plugin[get(tooltipname)].align,top);
		set(plugin[get(tooltipname)].edge,bottom);
		set(plugin[get(tooltipname)].x,0);
		set(plugin[get(tooltipname)].y,26);
		set(plugin[get(tooltipname)].autowidth,true);
		set(plugin[get(tooltipname)].autoheight,true);
		set(plugin[get(tooltipname)].roundedge,5);
		set(plugin[get(tooltipname)].backgroundalpha,0);
		set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:黑体; font-size:18px;');
		set(plugin[get(tooltipname)].html, get(title));
		set(plugin[get(tooltipname)].enabled,false);
		hotspot_animate();
	</action>

	<action name="hotspot_animate">
		inc(frame,1,get(lastframe),0);
		mul(ypos,frame,frameheight);
		txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));
		delayedcall(0.03, if(loaded, hotspot_animate() ) );
	</action>

	<action name="hotspot_click">
		if(linkedscene, set(enabled,false);
			skin_hidetooltips();
			if(dive,looktohotspot(get(name)));
			loadscene(get(linkedscene), null, get(skin_settings.loadscene_flags) ,get(skin_settings.loadscene_blend));
			skin_updatescroll();
		);
	</action>

	<!-- 点击箭头进入式热点 -->
    <style name="hotspot_1" url="hotspot1.png" scale="0.5" edge="top" distorted="true"
		onclick="if(linkedscene, set(enabled,false); skin_hidetooltips(); tween(depth|alpha|oy|rx, 4000|0.0|-50|-60, 0.5, default, loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); );"
		onover="tween(scale,0.55);"
		onout="tween(scale,0.5);"
		onloaded=""
    />

	<!-- 进入式热点 -->
	<style name="hotspot_2" crop="0|0|128|128" url="../img/hotspot2.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"
	/>

	<style name="hotspot_3" crop="0|0|128|128" url="spotd1_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="9" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_4" crop="0|0|128|128" url="spotd2_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="9" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_5" crop="0|0|128|128" url="spotd3_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="9" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_6" crop="0|0|128|128" url="spotd4_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="9" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_7" crop="0|0|128|128" url="spotd5_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="9" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_8" crop="0|0|128|128" url="new_spotd1_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_9" crop="0|0|128|128" url="new_spotd2_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_10" crop="0|0|128|128" url="new_spotd3_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_11" crop="0|0|128|128" url="new_spotd4_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_12" crop="0|0|128|128" url="new_spotd5_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_13" crop="0|0|128|128" url="new_spotd6_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_14" crop="0|0|128|128" url="new_spotd7_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_15" crop="0|0|128|128" url="new_spotd8_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_16" crop="0|0|128|128" url="new_spotd9_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_17" crop="0|0|128|128" url="new_spotd10_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_18" crop="0|0|128|128" url="new_spotd11_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

	<style name="hotspot_19" crop="0|0|128|128" url="new_spotd12_gif.png" framewidth="128" frameheight="128" frame="0" lastframe="24" scale="0.5" edge="top" distorted="true"
		onclick="hotspot_click()"
		onloaded="add_all_the_time_tooltip();"/>

    <!-- skin layout -->
    <layer name="skin_layer" keep="true" type="container" align="top" width="get:skin_settings.layout_width"
           maxwidth="get:skin_settings.layout_maxwidth" height="100%" maskchildren="true" visible="false"
           bgcapture="false" zorder="1">

		<layer name="logoBtn" type="container" align="topright" scale="0.5" x="0" y="0" width="160" height="80" enabled="false" visible="true" />

		<layer name="skin_control_bar" type="container" visible="false" align="bottom" zorder="2" width="get:skin_settings.controlbar_width" height="calc:skin_settings.controlbar_height" x="0" y="get:skin_settings.controlbar_offset">
			<layer name="skin_control_bar_buttons" type="container" align="bottomcenter" width="100%" height="get:skin_settings.controlbar_height">

				<layer name="thumbBtn" style="skin_style" crop="0|70|65|65" title="场景选择" align="bottomcenter" scale="0.5" x="0" y="0" isopen="false"
				onhover="showtext(get(title),tooltipTextStyle)"
				onclick="if(isopen == true, set(isopen,false);hidethumbs(), set(isopen,true); showthumbs());" />

				<layer name="gyroBtn" style="skin_style" crop="195|70|65|65" title="体感开关" align="bottomcenter" scale="0.5" x="50" y="0" visible="false"
					onhover="showtext(get(title),tooltipTextStyle)"
					ondown="if(plugin[skin_gyro].enabled,set(plugin[skin_gyro].enabled, false);set(crop,195|142|65|65);,set(plugin[skin_gyro].enabled, true);set(crop,195|70|65|65));" />

				<layer name="fullscreenBtn" style="skin_style" crop="65|142|65|65" title="全屏开关" align="bottomcenter" scale="0.5" x="100" y="0"
					onhover="showtext(get(title),tooltipTextStyle)"
					onclick="switch(fullscreen);" devices="fullscreensupport" />

				<layer name="soundBtn" style="skin_style" crop="130|142|65|65" title="音乐开关" align="bottomcenter" scale="0.5" x="150" y="0" visible="false"
					onhover="showtext(get(title),tooltipTextStyle)"
					onclick="if(plugin[skin_gyro].mute, set(plugin[skin_gyro].mute, false);set(crop,130|142|64|65);resumesound(bg), set(plugin[skin_gyro].mute, true); set(crop,130|70|65|65);pausesound(bg);)" />

				<layer name="vrBtn" style="skin_style" crop="0|0|65|65" title="VR开关" align="bottomcenter" scale="0.5" x="200" y="0"
					onhover="showtext(get(title),tooltipTextStyle)"
					onclick="webvr.enterVR();" />

			</layer>
		</layer>

		<layer name="thumbListLayer" url.flash="../swf/scrollarea.swf" url.html5="../script/scrollarea.js" direction="h"
			align="bottomcenter" zorder="3" x="0" y="80" width="100%" height="80" enabled="true" visible="false">

		</layer>

    </layer>

    <!-- gyro plugin -->
    <plugin name="skin_gyro" keep="true" url="" html5_url="%SWFPATH%/plugins/gyro2.js" devices="html5" enabled="false" onavailable="set(layer[gyroBtn].visible, true);layoutOption();"/>

	<!-- Soundinterface plugin -->
	<plugin name="soundinterface" url="../swf/soundinterface.swf" alturl="../script/soundinterface.js" preload="true" rootpath="" volume="1.0" mute="false"/>

    <!-- skin events -->
    <events name="skin_events" keep="true"
            onxmlcomplete="set(events[skin_events].onxmlcomplete,null); skin_startup();"
            onnewpano=""
            onremovepano=""
            onloadcomplete="skin_loadcomplete();"
            onidle="if(auto_rotate == 1 AND autorotate.enabled == false,startAutoRotate(););"
            onresize="skin_onresize();"
            onenterfullscreen.fullscreensupport="set(layer[fullscreenBtn].crop, '65|70|65|65');"
            onexitfullscreen.fullscreensupport="set(layer[fullscreenBtn].crop, '65|142|65|65');"
            onkeydown="skin_keydown_event();"
    />

    <!-- skin actions -->

	<action name="layoutOption">
		set(optionOffset,10);
		if(!device.desktop, set(optionOffsetSize, 40), set(optionOffsetSize, 50));

		if(!device.desktop,
			set(layer[thumbBtn].scale,0.4);
			set(layer[fullscreenBtn].scale,0.4);
			set(layer[soundBtn].scale,0.4);
			set(layer[vrBtn].scale,0.4);
			set(layer[gyroBtn].scale,0.4);
			set(layer[fullscreenBtn].visible, false);
			,
			set(layer[thumbBtn].scale,0.6);
			set(layer[fullscreenBtn].scale,0.6);
			set(layer[soundBtn].scale,0.6);
			set(layer[vrBtn].scale,0.6);
			set(layer[gyroBtn].scale,0.6);
		);

		if(layer[thumbBtn]!==null AND layer[thumbBtn].visible==true,
		  set(layer[thumbBtn].x,get(optionOffset));
		  add(optionOffset,get(optionOffsetSize));
		);
		if(layer[soundBtn]!==null AND layer[soundBtn].visible==true,
		  set(layer[soundBtn].x,get(optionOffset));
		  add(optionOffset,get(optionOffsetSize));
		);
		if(layer[gyroBtn]!==null AND layer[gyroBtn].visible==true,
		  set(layer[gyroBtn].x,get(optionOffset));
		  add(optionOffset,get(optionOffsetSize));
		);
		if(layer[vrBtn]!==null AND layer[vrBtn].visible==true,
		  set(layer[vrBtn].x,get(optionOffset));
		  add(optionOffset,get(optionOffsetSize));
		);
		if(layer[fullscreenBtn]!==null AND layer[fullscreenBtn].visible==true,
		  set(layer[fullscreenBtn].x,get(optionOffset));
		);

		div(divOffset, optionOffset, 2.5);
		mul(mulOffset, divOffset, 2);
		sub(divOffset, divOffset, mulOffset);
		set(layer[skin_control_bar_buttons].x, get(divOffset));

	</action>

	<action name="skin_hidetooltips">

		<!-- 临时关闭陀螺仪 -->
		if(plugin[skin_gyro].enabled == true,
			set(plugin[skin_gyro].enabled, fasle);
			delayedcall(1, set(plugin[skin_gyro].enabled, true););
		);

	</action>

	<action name="skin_updatescroll">

	</action>

    <action name="skin_startup">
        if(skin_settings.gyro AND !device.desktop AND device.html5, copy(plugin[skin_gyro].url, plugin[skin_gyro].html5_url););
        if(skin_settings.webvr AND device.html5 AND device.webgl, copy(plugin[WebVR].url, plugin[WebVR].pluginurl););
        if(skin_settings.littleplanetintro AND (device.webgl OR device.flash), skin_setup_littleplanetintro(););
		if(skin_settings.bgsound, set(layer[soundBtn].visible, true););
		if(skin_settings.logo, set(layer[logoBtn].url, get(skin_settings.logo)), trace(get(skin_settings.logo)),set(layer[logoBtn].visible, true));

		skin_addthumbs();
        skin_onresize();
        skin_updatescroll();

        set(layer[skin_layer].visible, true);
		set(layer[skin_control_bar].visible, true);

        <!-- 改变鼠标操作方式 -->
        set(control.mousetype, moveto);

		<!-- 重新设置按钮布局 -->
		layoutOption();
    </action>

	<action name="skin_loadcomplete">
        <!-- 回调js通知完成 -->
		if(!skin_settings.littleplanetintro, js('onready'));
    </action>

	<action name="littleplanetintro_complete">

		<!-- 播放背景音乐 -->
		if(layer[soundBtn]!==null AND layer[soundBtn].visible==true,
			playsound(bg, get(skin_settings.bgsound));
		);

		<!-- 检测陀螺仪 -->
		if(layer[gyroBtn]!==null AND layer[gyroBtn].visible==true,

			<!-- 开启陀螺仪 -->
			set(plugin[skin_gyro].enabled, true);

			<!-- 陀螺仪提示-->
			if(gyroAlertShow === null,
				if(layer["gyroAlert"]===null,
					addlayer(gyroAlert);
					set(layer[gyroAlert].url, skin/gyroAlert.png);
					set(layer[gyroAlert].align, center);
					set(layer[gyroAlert].scale, 0.5);
					set(layer[gyroAlert].background, false);
					set(layer[gyroAlert].autoalpha, true);
					set(layer[gyroAlert].enable, false);
				);
				set(layer[gyroAlert].alpha, 0.0);
				tween(layer[gyroAlert].alpha, 1.0, 0.5);
				delayedcall(3,tween(layer[gyroAlert].alpha, 0.0, 0.5););
				set(gyroAlertShow,true);
			);

		);

		<!-- 完成后关闭小行星 -->
		set(skin_settings.littleplanetintro, false);

		<!-- 回调js通知完成 -->
		delayedcall(.5, js('onready'));

    </action>

    <action name="skin_setup_littleplanetintro">
        copy(lp_scene, xml.scene);
        copy(lp_hlookat, view.hlookat);
        copy(lp_vlookat, view.vlookat);
        copy(lp_fov, view.fov);
        copy(lp_fovmax, view.fovmax);
        copy(lp_limitview, view.limitview);
        set(view.fovmax, 170);
        set(view.limitview, lookto);
        set(view.vlookatmin, 90);
        set(view.vlookatmax, 90);
        lookat(calc(lp_hlookat + 180), 90, 150, 1, 0, 0);
        set(events[lp_events].onloadcomplete,
        delayedcall(0.5,
        if(lp_scene === xml.scene,
        set(control.usercontrol, off);
        copy(view.limitview, lp_limitview);
        set(view.vlookatmin, null);
        set(view.vlookatmax, null);
        tween(view.hlookat|view.vlookat|view.fov|view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov
        + '|' + 0.0),
        3.0, easeOutQuad,
        set(control.usercontrol, all);
        tween(view.fovmax, get(lp_fovmax));
		littleplanetintro_complete();
        );
        );
        );
        );
    </action>

    <action name="skin_onresize">
        mul(mh, area.pixelheight, -1);
        sub(hh,layer[skin_control_bar].height);
		sub(hh,32);
		add(mh,hh);
		add(mh,skin_settings.controlbar_overlap);
        sub(mh, layer[skin_scroll_layer].y_offset);
		copy(layer[skin_map].height, hh);
        add(mh, layer[skin_scroll_layer].y_offset);
        set(layer[skin_scroll_layer].y, get(mh));
    </action>

    <action name="skin_gotoscene">
        if(scene[%1],
        copy(cursceneindex, scene[get(xml.scene)].index);
        copy(newsceneindex, scene[%1].index);
        loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(newsceneindex LT
        cursceneindex ? skin_settings.loadscene_blend_prev : (newsceneindex GT cursceneindex ?
        skin_settings.loadscene_blend_next : skin_settings.loadscene_blend)));
        );
    </action>

    <action name="skin_nextscene">
        add(newsceneindex, scene[get(xml.scene)].index, %1);
        if(newsceneindex GE 0 AND newsceneindex LT scene.count,
        txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
        loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ?
        skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
        );
    </action>

    <action name="skin_nextscene_loop">
        add(newsceneindex, scene[get(xml.scene)].index, %1);
        sub(lastsceneindex, scene.count, 1);
        if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
        if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
        loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),calc(%1 LT 0 ?
        skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));
    </action>

    <action name="skin_keydown_event">
        if(keycode == 33, skin_nextscene_loop(-1) );                <!-- Page Up   - previous scene -->
        if(keycode == 34, skin_nextscene_loop(+1) );                <!-- Page Dowm - next scene -->
        if(keycode == 35, skin_gotoscene(calc(scene.count-1)) );    <!-- End       - last scene -->
        if(keycode == 36, skin_gotoscene(0) );                    <!-- Home/Pos1 - first scene -->
    </action>

    <action name="skin_reloadscene_webvr">
        delayedcall(0.1,
        if(scene[get(xml.scene)].havevrimage,
        loadscene(get(xml.scene), null, MERGE|KEEPVIEW|KEEPMOVING|KEEPHOTSPOTS|NOPREVIEW, BLEND(0.5));
        );
        );
    </action>

    <action name="appOpenUrl">
        if(isApp == true, js(window.webkit.messageHandlers.krpanoOpenWebViewNavigationDelegate.postMessage(%1)); , openurl(%1););
    </action>

    <action name="skin_view_look_straight">
        if(view.vlookat LT -80 OR view.vlookat GT +80,
        tween(view.vlookat, 0.0, 1.0, easeInOutSine);
        tween(view.fov, 100, distance(150,0.8));
        );
    </action>

    <action name="cm_normal_view">
        skin_view_look_straight();
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini, 0.0, distance(1.0,0.5));
        tween(view.distortion, 0.0, distance(1.0,0.5));
    </action>

    <action name="cm_littleplanet_view">
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini, 0.0, distance(1.0,0.5));
        tween(view.distortion, 1.0, distance(1.0,0.8));
        tween(view.fov, 150, distance(150,0.8));
        tween(view.vlookat, 90, distance(100,0.8));
        add(new_hlookat, view.hlookat, 123.0);
        tween(view.hlookat, get(new_hlookat), distance(100,0.8));
    </action>

	<contextmenu keep="true" fullscreen="true" enterfs="全屏" exitfs="退出全屏" separator="true">
        <item name="copyright" caption="德基在线" enabled="true" visible="true" separator="true"
              onclick="appOpenUrl(http://dejionline.com);"/>
        <item name="normalView" caption="正常视角" onclick="cm_normal_view();" separator="true"/>
        <item name="planetView" caption="小行星视角" onclick="cm_littleplanet_view();" separator="false"/>
    </contextmenu>

</krpano>
